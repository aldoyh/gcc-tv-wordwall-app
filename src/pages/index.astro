---
import Layout from "../components/Layout.astro";
---

<Layout title="Wordwall Match Up">
  <div id="game-info">
    <div id="timer">Time: 0s</div>
    <div id="score">Score: 0</div>
  </div>
  <div id="game-container"></div>
  <div id="controls">
    <button id="reset-btn">Reset</button>
    <button id="check-btn">Check Answers</button>
  </div>
  <div id="leaderboard-form" style="display: none;">
    <h2>Add to Leaderboard</h2>
    <form>
      <input type="text" id="name-input" placeholder="Enter your name" />
      <button type="submit">Submit</button>
    </form>
  </div>
</Layout>

<script>
  import "../styles/game.css";

    let score = 0;
    let time = 0;
    let timerInterval;

    const timerEl = document.getElementById('timer');
    const scoreEl = document.getElementById('score');
    const gameContainer = document.getElementById('game-container');
    const leaderboardForm = document.getElementById('leaderboard-form');

    async function getQuestions() {
      const response = await fetch('/php-backend/api.php?action=get_questions');
      const questions = await response.json();
      return questions;
    }

    function startTimer() {
      timerInterval = setInterval(() => {
        time++;
        timerEl.textContent = `Time: ${time}s`;
      }, 1000);
    }

    function stopTimer() {
      clearInterval(timerInterval);
    }

    function updateScore(points) {
      score += points;
      scoreEl.textContent = `Score: ${score}`;
    }

    async function initGame() {
      const questions = await getQuestions();
      if (questions.length === 0) {
        gameContainer.innerHTML = '<p>No questions found. Please add some questions first.</p>';
        return;
      }
      startTimer();

      const termContainer = document.createElement('div');
      termContainer.className = 'term-container';
      gameContainer.appendChild(termContainer);

      const definitionContainer = document.createElement('div');
      definitionContainer.className = 'definition-container';
      gameContainer.appendChild(definitionContainer);

      questions.forEach((question, index) => {
        const termEl = document.createElement('div');
        termEl.id = `term${index}`;
        termEl.className = 'term';
        termEl.textContent = question.text;
        termEl.draggable = true;
        termEl.addEventListener('dragstart', (e) => {
          e.dataTransfer.setData('text/plain', termEl.id);
        });
        termContainer.appendChild(termEl);

        const defEl = document.createElement('div');
        defEl.id = `def${index}`;
        defEl.className = 'definition drop-target';
        defEl.textContent = question.options[question.correct_option];
        defEl.addEventListener('dragover', (e) => {
          e.preventDefault();
        });
        defEl.addEventListener('drop', (e) => {
          e.preventDefault();
          const termId = e.dataTransfer.getData('text/plain');
          const termEl = document.getElementById(termId);
          if (termEl) {
            if (termId.replace('term', '') === defEl.id.replace('def', '')) {
              defEl.appendChild(termEl);
              defEl.classList.add('correct');
              termEl.classList.add('matched');
              updateScore(10);
              if (document.querySelectorAll('.matched').length === questions.length) {
                stopTimer();
                leaderboardForm.style.display = 'block';
              }
            } else {
              defEl.classList.add('incorrect');
              setTimeout(() => {
                defEl.classList.remove('incorrect');
              }, 500);
            }
          }
        });
        definitionContainer.appendChild(defEl);
      });
    }

    initGame();

    const resetBtn = document.getElementById('reset-btn');
    resetBtn.addEventListener('click', () => {
      location.reload();
    });

    leaderboardForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const nameInput = document.getElementById('name-input');
      const name = nameInput.value;
      if (name) {
        const response = await fetch('/php-backend/api.php?action=add_leaderboard', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ player_name: name, score }),
        });
        if (response.ok) {
          window.location.href = '/leaderboard';
        } else {
          alert('Error submitting score');
        }
      }
    });
</script>