---
import Layout from '../components/Layout.astro';
import { t } from '../utils/i18n';
---

<Layout title={t('create_new_game')}>
  <div class="container mx-auto p-4">
    <h1 class="text-3xl font-bold mb-6 text-foreground text-center">{t('create_a_new_game')}</h1>
    <form id="create-game-form" class="max-w-lg mx-auto bg-card text-card-foreground p-8 rounded-lg shadow-md border border-border">
      <div class="mb-4">
        <label for="title" class="block text-sm font-medium mb-2">{t('title')}:</label>
        <input type="text" id="title" name="title" required class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50">
      </div>
      <div class="mb-4">
        <label for="description" class="block text-sm font-medium mb-2">{t('description')}:</label>
        <textarea id="description" name="description" required rows="4" class="flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"></textarea>
      </div>
      <div class="mb-6">
        <label for="template" class="block text-sm font-medium mb-2">{t('template')}:</label>
        <select id="template" name="template" class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50">
          <option value="match-up">{t('match_up')}</option>
          <option value="quiz">{t('quiz')}</option>
          <option value="crossword">{t('crossword')}</option>
          <option value="wordsearch">{t('wordsearch')}</option>
        </select>
      </div>
      <div class="flex items-center justify-center">
        <button type="submit" id="create-game-btn" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2">
          {t('create_new_game')}
        </button>
      </div>
    </form>
  </div>
</Layout>

<script>
  import { showNotification } from '../utils/notifications';
  import { t } from '../utils/i18n';

  const form = document.getElementById('create-game-form') as HTMLFormElement;
  const createGameBtn = document.getElementById('create-game-btn') as HTMLButtonElement;

  if (form) {
    form.addEventListener('submit', async (e: Event) => {
      e.preventDefault();
      createGameBtn.disabled = true; // Disable button on submit
      createGameBtn.textContent = t('creating');

      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      try {
        const response = await fetch('/php-backend/api.php?action=create_game', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        });

        if (response.ok) {
          const result = await response.json();
          showNotification({ message: t('game_created_successfully'), type: 'success' });
          window.location.href = `/game?id=${result.game_id}`;
        } else {
          const errorText = await response.text();
          showNotification({ message: `${t('error_creating_game')}: ${errorText}`, type: 'error' });
        }
      } catch (error) {
        console.error('Network error:', error);
        showNotification({ message: t('network_error_create_game'), type: 'error' });
      } finally {
        createGameBtn.disabled = false;
        createGameBtn.textContent = t('create_new_game');
      }
    });
  }
</script>